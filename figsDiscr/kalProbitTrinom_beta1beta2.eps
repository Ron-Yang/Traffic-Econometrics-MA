%!PS-Adobe-2.0 EPSF-2.0
%%Title: kalProbitTrinom_beta1beta2.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Nov 29 01:06:36 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 402
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (kalProbitTrinom_beta1beta2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (treiber)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 29 01:06:36 2019)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 402 lineto 50 402 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .16 .33 .5 .67 .84 1 ] def
/RedA [1 .4 .4 1 1 1 1 ] def
/GreenA [1 .4 1 1 .6471 .4 0 ] def
/BlueA [1 1 .4 0 0 .4 .3333 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.000 UP
%pm3d_map_begin
.2196 g 5791 5705 N 0 244 258 0 0 -244 h
.2978 g 5533 5705 N 0 244 258 0 0 -244 h
.3517 g 5275 5705 N 0 244 258 0 0 -244 h
.3815 g 5017 5705 N 0 244 258 0 0 -244 h
.3873 g 4760 5705 N 0 244 257 0 0 -244 h
.3693 g 4502 5705 N 0 244 258 0 0 -244 h
.3277 g 4244 5705 N 0 244 258 0 0 -244 h
.263 g 3986 5705 N 0 244 258 0 0 -244 h
.3758 g 5791 5461 N 0 244 258 0 0 -244 h
.4595 g 5533 5461 N 0 244 258 0 0 -244 h
.5203 g 5275 5461 N 0 244 258 0 0 -244 h
.5583 g 5017 5461 N 0 244 258 0 0 -244 h
.5737 g 4760 5461 N 0 244 257 0 0 -244 h
.5665 g 4502 5461 N 0 244 258 0 0 -244 h
.5371 g 4244 5461 N 0 244 258 0 0 -244 h
.4856 g 3986 5461 N 0 244 258 0 0 -244 h
.4124 g 3728 5461 N 0 244 258 0 0 -244 h
.3179 g 3471 5461 N 0 244 257 0 0 -244 h
.2022 g 3213 5461 N 0 244 258 0 0 -244 h
.4675 g 5791 5217 N 0 245 258 0 0 -245 h
.5576 g 5533 5217 N 0 245 258 0 0 -245 h
.6263 g 5275 5217 N 0 245 258 0 0 -245 h
.6736 g 5017 5217 N 0 245 258 0 0 -245 h
.6997 g 4760 5217 N 0 245 257 0 0 -245 h
.7046 g 4502 5217 N 0 245 258 0 0 -245 h
.6884 g 4244 5217 N 0 245 258 0 0 -245 h
.6513 g 3986 5217 N 0 245 258 0 0 -245 h
.5936 g 3728 5217 N 0 245 258 0 0 -245 h
.5154 g 3471 5217 N 0 245 257 0 0 -245 h
.4171 g 3213 5217 N 0 245 258 0 0 -245 h
.299 g 2955 5217 N 0 245 258 0 0 -245 h
.5059 g 5791 4972 N 0 244 258 0 0 -244 h
.6032 g 5533 4972 N 0 244 258 0 0 -244 h
.6805 g 5275 4972 N 0 244 258 0 0 -244 h
.7379 g 5017 4972 N 0 244 258 0 0 -244 h
.7753 g 4760 4972 N 0 244 257 0 0 -244 h
.7928 g 4502 4972 N 0 244 258 0 0 -244 h
.7904 g 4244 4972 N 0 244 258 0 0 -244 h
.7682 g 3986 4972 N 0 244 258 0 0 -244 h
.7264 g 3728 4972 N 0 244 258 0 0 -244 h
.6652 g 3471 4972 N 0 244 257 0 0 -244 h
.5846 g 3213 4972 N 0 244 258 0 0 -244 h
.4849 g 2955 4972 N 0 244 258 0 0 -244 h
.3664 g 2697 4972 N 0 244 258 0 0 -244 h
.2292 g 2439 4972 N 0 244 258 0 0 -244 h
.5018 g 5791 4728 N 0 245 258 0 0 -245 h
.6068 g 5533 4728 N 0 245 258 0 0 -245 h
.6931 g 5275 4728 N 0 245 258 0 0 -245 h
.7607 g 5017 4728 N 0 245 258 0 0 -245 h
.8096 g 4760 4728 N 0 245 257 0 0 -245 h
.8397 g 4502 4728 N 0 245 258 0 0 -245 h
.851 g 4244 4728 N 0 245 258 0 0 -245 h
.8437 g 3986 4728 N 0 245 258 0 0 -245 h
.8176 g 3728 4728 N 0 245 258 0 0 -245 h
.773 g 3471 4728 N 0 245 257 0 0 -245 h
.7099 g 3213 4728 N 0 245 258 0 0 -245 h
.6284 g 2955 4728 N 0 245 258 0 0 -245 h
.5287 g 2697 4728 N 0 245 258 0 0 -245 h
.411 g 2439 4728 N 0 245 258 0 0 -245 h
.2754 g 2182 4728 N 0 245 257 0 0 -245 h
.4649 g 5791 4483 N 0 244 258 0 0 -244 h
.5777 g 5533 4483 N 0 244 258 0 0 -244 h
.6728 g 5275 4483 N 0 244 258 0 0 -244 h
.7504 g 5017 4483 N 0 244 258 0 0 -244 h
.8103 g 4760 4483 N 0 244 257 0 0 -244 h
.8525 g 4502 4483 N 0 244 258 0 0 -244 h
.877 g 4244 4483 N 0 244 258 0 0 -244 h
.8838 g 3986 4483 N 0 244 258 0 0 -244 h
.8728 g 3728 4483 N 0 244 258 0 0 -244 h
.8441 g 3471 4483 N 0 244 257 0 0 -244 h
.7977 g 3213 4483 N 0 244 258 0 0 -244 h
.7336 g 2955 4483 N 0 244 258 0 0 -244 h
.6521 g 2697 4483 N 0 244 258 0 0 -244 h
.5531 g 2439 4483 N 0 244 258 0 0 -244 h
.4369 g 2182 4483 N 0 244 257 0 0 -244 h
.3034 g 1924 4483 N 0 244 258 0 0 -244 h
.4029 g 5791 4239 N 0 245 258 0 0 -245 h
.5231 g 5533 4239 N 0 245 258 0 0 -245 h
.6267 g 5275 4239 N 0 245 258 0 0 -245 h
.7136 g 5017 4239 N 0 245 258 0 0 -245 h
.7838 g 4760 4239 N 0 245 257 0 0 -245 h
.8373 g 4502 4239 N 0 245 258 0 0 -245 h
.8739 g 4244 4239 N 0 245 258 0 0 -245 h
.8937 g 3986 4239 N 0 245 258 0 0 -245 h
.8966 g 3728 4239 N 0 245 258 0 0 -245 h
.8827 g 3471 4239 N 0 245 257 0 0 -245 h
.8519 g 3213 4239 N 0 245 258 0 0 -245 h
.8042 g 2955 4239 N 0 245 258 0 0 -245 h
.7397 g 2697 4239 N 0 245 258 0 0 -245 h
.6585 g 2439 4239 N 0 245 258 0 0 -245 h
.5606 g 2182 4239 N 0 245 257 0 0 -245 h
.4462 g 1924 4239 N 0 245 258 0 0 -245 h
.3152 g 1666 4239 N 0 245 258 0 0 -245 h
.1678 g 1408 4239 N 0 245 258 0 0 -245 h
.3214 g 5791 3994 N 0 244 258 0 0 -244 h
.4487 g 5533 3994 N 0 244 258 0 0 -244 h
.5601 g 5275 3994 N 0 244 258 0 0 -244 h
.6556 g 5017 3994 N 0 244 258 0 0 -244 h
.7351 g 4760 3994 N 0 244 257 0 0 -244 h
.7987 g 4502 3994 N 0 244 258 0 0 -244 h
.8462 g 4244 3994 N 0 244 258 0 0 -244 h
.8778 g 3986 3994 N 0 244 258 0 0 -244 h
.8933 g 3728 3994 N 0 244 258 0 0 -244 h
.8927 g 3471 3994 N 0 244 257 0 0 -244 h
.8762 g 3213 3994 N 0 244 258 0 0 -244 h
.8435 g 2955 3994 N 0 244 258 0 0 -244 h
.7949 g 2697 3994 N 0 244 258 0 0 -244 h
.7302 g 2439 3994 N 0 244 258 0 0 -244 h
.6495 g 2182 3994 N 0 244 257 0 0 -244 h
.5529 g 1924 3994 N 0 244 258 0 0 -244 h
.4403 g 1666 3994 N 0 244 258 0 0 -244 h
.3119 g 1408 3994 N 0 244 258 0 0 -244 h
.1677 g 1150 3994 N 0 244 258 0 0 -244 h
.2244 g 5791 3750 N 0 245 258 0 0 -245 h
.3583 g 5533 3750 N 0 245 258 0 0 -245 h
.4769 g 5275 3750 N 0 245 258 0 0 -245 h
.58 g 5017 3750 N 0 245 258 0 0 -245 h
.6679 g 4760 3750 N 0 245 257 0 0 -245 h
.7404 g 4502 3750 N 0 245 258 0 0 -245 h
.7977 g 4244 3750 N 0 245 258 0 0 -245 h
.8397 g 3986 3750 N 0 245 258 0 0 -245 h
.8664 g 3728 3750 N 0 245 258 0 0 -245 h
.8778 g 3471 3750 N 0 245 257 0 0 -245 h
.874 g 3213 3750 N 0 245 258 0 0 -245 h
.855 g 2955 3750 N 0 245 258 0 0 -245 h
.8206 g 2697 3750 N 0 245 258 0 0 -245 h
.7711 g 2439 3750 N 0 245 258 0 0 -245 h
.7063 g 2182 3750 N 0 245 257 0 0 -245 h
.6262 g 1924 3750 N 0 245 258 0 0 -245 h
.5309 g 1666 3750 N 0 245 258 0 0 -245 h
.4204 g 1408 3750 N 0 245 258 0 0 -245 h
.2946 g 1150 3750 N 0 245 258 0 0 -245 h
.2545 g 5533 3505 N 0 244 258 0 0 -244 h
.3796 g 5275 3505 N 0 244 258 0 0 -244 h
.4897 g 5017 3505 N 0 244 258 0 0 -244 h
.585 g 4760 3505 N 0 244 257 0 0 -244 h
.6656 g 4502 3505 N 0 244 258 0 0 -244 h
.7314 g 4244 3505 N 0 244 258 0 0 -244 h
.7826 g 3986 3505 N 0 244 258 0 0 -244 h
.8192 g 3728 3505 N 0 244 258 0 0 -244 h
.8412 g 3471 3505 N 0 244 257 0 0 -244 h
.8488 g 3213 3505 N 0 244 258 0 0 -244 h
.8418 g 2955 3505 N 0 244 258 0 0 -244 h
.8203 g 2697 3505 N 0 244 258 0 0 -244 h
.7844 g 2439 3505 N 0 244 258 0 0 -244 h
.734 g 2182 3505 N 0 244 257 0 0 -244 h
.6691 g 1924 3505 N 0 244 258 0 0 -244 h
.5896 g 1666 3505 N 0 244 258 0 0 -244 h
.4956 g 1408 3505 N 0 244 258 0 0 -244 h
.387 g 1150 3505 N 0 244 258 0 0 -244 h
.1391 g 5533 3261 N 0 245 258 0 0 -245 h
.2701 g 5275 3261 N 0 245 258 0 0 -245 h
.3866 g 5017 3261 N 0 245 258 0 0 -245 h
.4887 g 4760 3261 N 0 245 257 0 0 -245 h
.5764 g 4502 3261 N 0 245 258 0 0 -245 h
.6499 g 4244 3261 N 0 245 258 0 0 -245 h
.7092 g 3986 3261 N 0 245 258 0 0 -245 h
.7545 g 3728 3261 N 0 245 258 0 0 -245 h
.7859 g 3471 3261 N 0 245 257 0 0 -245 h
.8034 g 3213 3261 N 0 245 258 0 0 -245 h
.8071 g 2955 3261 N 0 245 258 0 0 -245 h
.7971 g 2697 3261 N 0 245 258 0 0 -245 h
.7733 g 2439 3261 N 0 245 258 0 0 -245 h
.7358 g 2182 3261 N 0 245 257 0 0 -245 h
.6845 g 1924 3261 N 0 245 258 0 0 -245 h
.6194 g 1666 3261 N 0 245 258 0 0 -245 h
.5405 g 1408 3261 N 0 245 258 0 0 -245 h
.4477 g 1150 3261 N 0 245 258 0 0 -245 h
.1498 g 5275 3016 N 0 244 258 0 0 -244 h
.2722 g 5017 3016 N 0 244 258 0 0 -244 h
.3804 g 4760 3016 N 0 244 257 0 0 -244 h
.4746 g 4502 3016 N 0 244 258 0 0 -244 h
.555 g 4244 3016 N 0 244 258 0 0 -244 h
.6217 g 3986 3016 N 0 244 258 0 0 -244 h
.6748 g 3728 3016 N 0 244 258 0 0 -244 h
.7144 g 3471 3016 N 0 244 257 0 0 -244 h
.7408 g 3213 3016 N 0 244 258 0 0 -244 h
.7539 g 2955 3016 N 0 244 258 0 0 -244 h
.7539 g 2697 3016 N 0 244 258 0 0 -244 h
.7408 g 2439 3016 N 0 244 258 0 0 -244 h
.7147 g 2182 3016 N 0 244 257 0 0 -244 h
.6756 g 1924 3016 N 0 244 258 0 0 -244 h
.6234 g 1666 3016 N 0 244 258 0 0 -244 h
.5581 g 1408 3016 N 0 244 258 0 0 -244 h
.4796 g 1150 3016 N 0 244 258 0 0 -244 h
.1473 g 5017 2772 N 0 245 258 0 0 -245 h
.2613 g 4760 2772 N 0 245 257 0 0 -245 h
.3616 g 4502 2772 N 0 245 258 0 0 -245 h
.4483 g 4244 2772 N 0 245 258 0 0 -245 h
.5216 g 3986 2772 N 0 245 258 0 0 -245 h
.5818 g 3728 2772 N 0 245 258 0 0 -245 h
.6288 g 3471 2772 N 0 245 257 0 0 -245 h
.6631 g 3213 2772 N 0 245 258 0 0 -245 h
.6846 g 2955 2772 N 0 245 258 0 0 -245 h
.6934 g 2697 2772 N 0 245 258 0 0 -245 h
.6899 g 2439 2772 N 0 245 258 0 0 -245 h
.6738 g 2182 2772 N 0 245 257 0 0 -245 h
.6454 g 1924 2772 N 0 245 258 0 0 -245 h
.6046 g 1666 2772 N 0 245 258 0 0 -245 h
.5515 g 1408 2772 N 0 245 258 0 0 -245 h
.4858 g 1150 2772 N 0 245 258 0 0 -245 h
.1323 g 4760 2527 N 0 244 257 0 0 -244 h
.2383 g 4502 2527 N 0 244 258 0 0 -244 h
.3309 g 4244 2527 N 0 244 258 0 0 -244 h
.4104 g 3986 2527 N 0 244 258 0 0 -244 h
.477 g 3728 2527 N 0 244 258 0 0 -244 h
.5309 g 3471 2527 N 0 244 257 0 0 -244 h
.5722 g 3213 2527 N 0 244 258 0 0 -244 h
.6012 g 2955 2527 N 0 244 258 0 0 -244 h
.618 g 2697 2527 N 0 244 258 0 0 -244 h
.6228 g 2439 2527 N 0 244 258 0 0 -244 h
.6157 g 2182 2527 N 0 244 257 0 0 -244 h
.5968 g 1924 2527 N 0 244 258 0 0 -244 h
.5661 g 1666 2527 N 0 244 258 0 0 -244 h
.5236 g 1408 2527 N 0 244 258 0 0 -244 h
.4694 g 1150 2527 N 0 244 258 0 0 -244 h
.2036 g 4244 2283 N 0 245 258 0 0 -245 h
.2889 g 3986 2283 N 0 245 258 0 0 -245 h
.3615 g 3728 2283 N 0 245 258 0 0 -245 h
.4217 g 3471 2283 N 0 245 257 0 0 -245 h
.4696 g 3213 2283 N 0 245 258 0 0 -245 h
.5055 g 2955 2283 N 0 245 258 0 0 -245 h
.5295 g 2697 2283 N 0 245 258 0 0 -245 h
.5419 g 2439 2283 N 0 245 258 0 0 -245 h
.5427 g 2182 2283 N 0 245 257 0 0 -245 h
.5322 g 1924 2283 N 0 245 258 0 0 -245 h
.5105 g 1666 2283 N 0 245 258 0 0 -245 h
.4775 g 1408 2283 N 0 245 258 0 0 -245 h
.4332 g 1150 2283 N 0 245 258 0 0 -245 h
.1579 g 3986 2038 N 0 244 258 0 0 -244 h
.2362 g 3728 2038 N 0 244 258 0 0 -244 h
.3023 g 3471 2038 N 0 244 257 0 0 -244 h
.3563 g 3213 2038 N 0 244 258 0 0 -244 h
.3986 g 2955 2038 N 0 244 258 0 0 -244 h
.4293 g 2697 2038 N 0 244 258 0 0 -244 h
.4486 g 2439 2038 N 0 244 258 0 0 -244 h
.4567 g 2182 2038 N 0 244 257 0 0 -244 h
.4538 g 1924 2038 N 0 244 258 0 0 -244 h
.4399 g 1666 2038 N 0 244 258 0 0 -244 h
.4153 g 1408 2038 N 0 244 258 0 0 -244 h
.38 g 1150 2038 N 0 244 258 0 0 -244 h
.1734 g 3471 1794 N 0 244 257 0 0 -244 h
.2333 g 3213 1794 N 0 244 258 0 0 -244 h
.2815 g 2955 1794 N 0 244 258 0 0 -244 h
.3184 g 2697 1794 N 0 244 258 0 0 -244 h
.3441 g 2439 1794 N 0 244 258 0 0 -244 h
.3589 g 2182 1794 N 0 244 257 0 0 -244 h
.363 g 1924 1794 N 0 244 258 0 0 -244 h
.3564 g 1666 1794 N 0 244 258 0 0 -244 h
.3394 g 1408 1794 N 0 244 258 0 0 -244 h
.312 g 1150 1794 N 0 244 258 0 0 -244 h
.1012 g 3213 1550 N 0 245 258 0 0 -245 h
.155 g 2955 1550 N 0 245 258 0 0 -245 h
.1977 g 2697 1550 N 0 245 258 0 0 -245 h
.2295 g 2439 1550 N 0 245 258 0 0 -245 h
.2506 g 2182 1550 N 0 245 257 0 0 -245 h
.2611 g 1924 1550 N 0 245 258 0 0 -245 h
.2612 g 1666 1550 N 0 245 258 0 0 -245 h
.2511 g 1408 1550 N 0 245 258 0 0 -245 h
.2309 g 1150 1550 N 0 245 258 0 0 -245 h
%pm3d_map_end
% Begin plot #1
4.000 UL
LT5
4.000 UL
LT6
3728 3946 M
-33 48 V
33 30 V
258 30 V
9 -60 V
-9 -6 V
-258 -42 V
2698 3237 M
-20 25 V
-27 244 V
47 118 V
52 126 V
177 244 V
29 29 V
221 216 V
37 28 V
258 194 V
31 22 V
225 122 V
238 123 V
20 8 V
258 69 V
258 33 V
258 -34 V
141 -76 V
86 -245 V
-84 -244 V
4760 4009 L
-11 -15 V
4520 3750 L
-18 -17 V
4244 3525 L
-27 -19 V
3986 3366 L
3789 3262 L
-61 -29 V
-256 -86 V
-258 -50 V
-258 8 V
-258 132 V
2440 2718 M
-118 55 V
-139 137 V
-58 107 V
-5 245 V
63 182 V
21 62 V
154 244 V
82 98 V
122 146 V
136 133 V
115 112 V
143 115 V
160 129 V
98 66 V
258 173 V
9 6 V
247 123 V
254 121 V
4 2 V
258 74 V
258 50 V
258 14 V
257 -39 V
235 -101 V
23 -25 V
115 -219 V
-17 -245 V
-95 -244 V
-3 -5 V
5114 3994 L
-97 -120 V
4908 3750 L
4760 3601 L
-104 -95 V
4502 3377 L
4349 3262 L
-105 -74 V
3986 3027 L
-19 -10 V
3728 2901 L
3472 2794 L
-71 -21 V
-187 -53 V
-258 -43 V
-258 -6 V
-258 47 V
1925 2479 M
-67 49 V
-157 245 V
-14 244 V
72 245 V
125 244 V
41 57 V
135 187 V
123 138 V
93 106 V
164 157 V
91 88 V
167 137 V
130 107 V
128 91 V
215 154 V
43 26 V
258 149 V
124 69 V
132 62 V
258 106 V
215 77 V
43 12 V
258 49 V
258 23 V
257 -9 V
258 -50 V
69 -25 V
189 -132 V
105 -113 V
64 -244 V
-42 -245 V
5557 4239 L
-24 -40 V
5399 3994 L
5275 3832 L
-67 -82 V
5017 3543 L
-36 -37 V
4760 3302 L
-48 -40 V
4502 3095 L
-109 -78 V
4244 2916 L
4012 2773 L
-26 -15 V
3728 2629 L
3500 2528 L
-28 -12 V
-258 -83 V
-258 -63 V
-258 -37 V
-258 -4 V
-257 41 V
-258 109 V
258 -446 R
-49 6 V
-209 36 V
-258 100 V
-158 109 V
-100 126 V
-62 118 V
-30 245 V
46 244 V
46 107 V
59 138 V
150 244 V
49 61 V
143 183 V
115 123 V
110 121 V
148 139 V
111 106 V
146 121 V
148 123 V
110 81 V
221 164 V
37 23 V
258 161 V
98 60 V
160 83 V
256 128 V
75 34 V
183 66 V
258 78 V
258 60 V
258 34 V
257 2 V
258 -39 V
258 -88 V
207 -113 V
51 -56 V
125 -189 V
34 -244 V
-51 -245 V
5795 4239 L
-4 -7 V
5640 3994 L
5533 3846 L
-75 -96 V
5275 3538 L
-29 -32 V
5017 3277 L
-16 -15 V
4760 3051 L
-42 -34 V
4502 2852 L
-114 -79 V
-144 -96 V
4000 2528 L
-14 -8 V
3728 2390 L
3494 2284 L
-22 -10 V
-258 -90 V
-258 -73 V
-258 -53 V
-176 -19 V
-82 -8 V
-257 2 V
1151 3130 M
69 132 V
166 244 V
23 28 V
180 216 V
78 80 V
155 164 V
103 95 V
160 150 V
98 81 V
194 163 V
63 48 V
258 194 V
3 3 V
255 165 V
122 79 V
136 77 V
258 142 V
50 26 V
206 88 V
258 101 V
167 55 V
91 24 V
258 51 V
258 30 V
257 6 V
258 -21 V
258 -53 V
114 -37 V
144 -76 V
225 -168 V
33 -52 V
1151 2112 M
69 -73 V
189 -123 V
258 -100 V
108 -21 V
150 -23 V
258 -10 V
257 16 V
114 17 V
144 23 V
258 62 V
258 79 V
217 80 V
41 16 V
256 118 V
218 111 V
40 21 V
258 154 V
105 69 V
153 105 V
188 140 V
70 54 V
227 190 V
30 27 V
229 218 V
29 29 V
200 215 V
58 67 V
144 177 V
114 153 V
63 91 V
147 245 V
48 103 V
0 1055 R
-87 64 V
-171 78 V
-258 82 V
-258 48 V
-258 17 V
-257 -11 V
-258 -35 V
-258 -56 V
-258 -71 V
2956 5021 M
258 151 V
80 45 V
178 85 V
256 117 V
104 42 V
1925 4264 M
258 217 V
2 2 V
255 191 V
72 54 V
186 125 V
176 119 V
1151 3468 M
27 38 V
211 244 V
20 20 V
219 224 V
39 35 V
226 210 V
1151 1688 M
258 -103 V
stroke 1409 1585 M
155 -34 V
103 -19 V
258 -18 V
258 6 V
257 28 V
11 3 V
247 48 V
258 68 V
258 84 V
114 44 V
144 57 V
256 118 V
134 69 V
124 67 V
258 151 V
41 27 V
217 146 V
135 98 V
123 93 V
187 152 V
70 60 V
203 184 V
55 53 V
188 192 V
70 74 V
148 170 V
110 133 V
85 111 V
173 243 V
0 1557 R
-258 115 V
-130 40 V
3986 5607 M
258 76 V
97 22 V
3214 5279 M
258 129 V
114 53 V
2956 5134 M
138 83 V
2440 4799 M
248 173 V
2183 4609 M
154 119 V
1925 4407 M
90 76 V
1151 3685 M
57 65 V
201 201 V
42 43 V
216 195 V
53 50 V
5871 3506 M
178 228 V
4565 2284 M
195 143 V
127 101 V
130 108 V
156 137 V
102 93 V
155 151 V
103 105 V
128 140 V
130 147 V
3758 1795 M
228 122 V
210 122 V
48 29 V
258 170 V
2227 1306 M
213 33 V
258 57 V
258 72 V
245 83 V
13 4 V
258 106 V
256 118 V
1448 1306 M
-39 5 V
-258 64 V
6049 5680 M
-59 25 V
-2004 -4 R
16 4 V
3214 5377 M
163 84 V
2440 4914 M
83 58 V
1409 4102 M
150 137 V
1151 3859 M
137 135 V
5623 3017 M
168 182 V
5379 2773 M
154 151 V
5110 2528 M
165 147 V
4811 2284 M
206 165 V
4475 2039 M
27 18 V
4086 1795 M
158 94 V
stroke 4244 1889 M
3625 1551 M
103 49 V
3032 1306 M
182 66 V
258 107 V
% End plot #1
stroke
1.000 UL
LTb
1150 5950 N
0 -4645 V
4899 0 V
0 4645 V
-4899 0 V
Z stroke
1.000 UL
LTa
1151 1306 M
0 4644 V
stroke
LTb
1151 1306 M
0 82 V
stroke
1151 1046 M
[ [(Helvetica) 200.0 0.0 true true 0 (-3)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1151 5950 M
0 -82 V
stroke
LTa
1968 1306 M
0 4644 V
stroke
LTb
1968 1306 M
0 82 V
stroke
1968 1046 M
[ [(Helvetica) 200.0 0.0 true true 0 (-2.5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1968 5950 M
0 -82 V
stroke
LTa
2784 1306 M
0 4644 V
stroke
LTb
2784 1306 M
0 82 V
stroke
2784 1046 M
[ [(Helvetica) 200.0 0.0 true true 0 (-2)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2784 5950 M
0 -82 V
stroke
LTa
3600 1306 M
0 4644 V
stroke
LTb
3600 1306 M
0 82 V
stroke
3600 1046 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
3600 5950 M
0 -82 V
stroke
LTa
4416 1306 M
0 4644 V
stroke
LTb
4416 1306 M
0 82 V
stroke
4416 1046 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4416 5950 M
0 -82 V
stroke
LTa
5232 1306 M
0 4644 V
stroke
LTb
5232 1306 M
0 82 V
stroke
5232 1046 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
5232 5950 M
0 -82 V
stroke
LTa
6049 1306 M
0 4644 V
stroke
LTb
6049 1306 M
0 82 V
stroke
6049 1046 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
6049 5950 M
0 -82 V
stroke
LCb setrgbcolor
3600 746 M
[ /Symbol reencodeISO def
[(Symbol) 200.0 0.0 true true 0 (b)]
[(Helvetica) 160.0 -60.0 true true 0 (1)]
] -46.7 MCshow
LTb
1.000 UL
LTa
1151 1306 M
4898 0 V
stroke
LTb
1151 1306 M
82 0 V
stroke
995 1306 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.3)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
6049 1306 M
-82 0 V
stroke
LTa
1151 2080 M
4898 0 V
stroke
LTb
1151 2080 M
82 0 V
stroke
995 2080 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.25)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
6049 2080 M
-82 0 V
stroke
LTa
1151 2854 M
4898 0 V
stroke
LTb
1151 2854 M
82 0 V
stroke
995 2854 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.2)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
6049 2854 M
-82 0 V
stroke
LTa
1151 3628 M
4898 0 V
stroke
LTb
1151 3628 M
82 0 V
stroke
995 3628 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.15)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
6049 3628 M
-82 0 V
stroke
LTa
1151 4402 M
4898 0 V
stroke
LTb
1151 4402 M
82 0 V
stroke
995 4402 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
6049 4402 M
-82 0 V
stroke
LTa
1151 5176 M
4898 0 V
stroke
LTb
1151 5176 M
82 0 V
stroke
995 5176 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
6049 5176 M
-82 0 V
stroke
LTa
1151 5950 M
4898 0 V
stroke
LTb
1151 5950 M
82 0 V
stroke
995 5950 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
6049 5950 M
-82 0 V
stroke
LCb setrgbcolor
216 3628 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (b)]
[(Helvetica) 160.0 -60.0 true true 0 (2)]
] -46.7 MCshow
grestore
LTb
1.000 UL
LTb
1150 5950 N
0 -4645 V
4899 0 V
0 4645 V
-4899 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6171 1305 translate 245 4645 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
6171 1305 N
245 0 V
0 4645 V
-245 0 V
0 -4645 V
Z stroke
1.000 UL
LTb
1.000 UL
LTb
6416 1769 M
-63 0 V
stroke
6536 1769 M
[ [(Helvetica) 200.0 0.0 true true 0 (-26)]
] -66.7 MLshow
1.000 UL
LTb
6171 1769 M
63 0 V
182 929 R
-63 0 V
stroke
6536 2698 M
[ [(Helvetica) 200.0 0.0 true true 0 (-24)]
] -66.7 MLshow
1.000 UL
LTb
6171 2698 M
63 0 V
182 929 R
-63 0 V
stroke
6536 3627 M
[ [(Helvetica) 200.0 0.0 true true 0 (-22)]
] -66.7 MLshow
1.000 UL
LTb
6171 3627 M
63 0 V
182 929 R
-63 0 V
stroke
6536 4556 M
[ [(Helvetica) 200.0 0.0 true true 0 (-20)]
] -66.7 MLshow
1.000 UL
LTb
6171 4556 M
63 0 V
182 929 R
-63 0 V
stroke
6536 5485 M
[ [(Helvetica) 200.0 0.0 true true 0 (-18)]
] -66.7 MLshow
1.000 UL
LTb
6171 5485 M
63 0 V
1.000 UP
stroke
3456 6299 M
[ [(Helvetica) 200.0 0.0 true true 0 (i.i.d. Probit)]
] -66.7 MLshow
6479 6299 M
[ [(Helvetica) 200.0 0.0 true true 0 (ln L)]
] -66.7 MLshow
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
